openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/v1/external/customers/:
    get:
      operationId: customers_list
      description: |-
        Customer Model schema:
        id:
            - type: number
            - read_only
            - description: unique customer identifier
        name:
            - type: string
            - required: true
            - description: full customer name

        phone_number:
            - type: string
            - required: true
            - description: unique customer's primary phone number respecting E.164 format

        secondary_phone_number:
            - type: string
            - required: false
            - description: customer's secondary phone number respecting E.164 format

        email:
            - type: string
            - required: false
            - description: valid customer's email address

        locations:
            - array<objects>
            - read_only
            - description: list of customer locations
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - customers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerList'
          description: ''
    post:
      operationId: customers_create
      description: |-
        Customer Model schema:
        id:
            - type: number
            - read_only
            - description: unique customer identifier
        name:
            - type: string
            - required: true
            - description: full customer name

        phone_number:
            - type: string
            - required: true
            - description: unique customer's primary phone number respecting E.164 format

        secondary_phone_number:
            - type: string
            - required: false
            - description: customer's secondary phone number respecting E.164 format

        email:
            - type: string
            - required: false
            - description: valid customer's email address

        locations:
            - array<objects>
            - read_only
            - description: list of customer locations
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: customers_partial_update
      description: |-
        Customer Model schema:
        id:
            - type: number
            - read_only
            - description: unique customer identifier
        name:
            - type: string
            - required: true
            - description: full customer name

        phone_number:
            - type: string
            - required: true
            - description: unique customer's primary phone number respecting E.164 format

        secondary_phone_number:
            - type: string
            - required: false
            - description: customer's secondary phone number respecting E.164 format

        email:
            - type: string
            - required: false
            - description: valid customer's email address

        locations:
            - array<objects>
            - read_only
            - description: list of customer locations
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/v1/external/customers/{customer_pk}/locations/:
    get:
      operationId: customers_locations_list
      parameters:
      - in: path
        name: customer_pk
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - customers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExternalLocationList'
          description: ''
    post:
      operationId: customers_locations_create
      parameters:
      - in: path
        name: customer_pk
        schema:
          type: integer
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExternalLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExternalLocation'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLocation'
          description: ''
  /api/v1/external/customers/{customer_pk}/locations/{location_pk}/:
    patch:
      operationId: customers_locations_partial_update
      parameters:
      - in: path
        name: customer_pk
        schema:
          type: integer
        required: true
      - in: path
        name: location_pk
        schema:
          type: integer
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExternalLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExternalLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExternalLocation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLocation'
          description: ''
    delete:
      operationId: customers_locations_destroy
      parameters:
      - in: path
        name: customer_pk
        schema:
          type: integer
        required: true
      - in: path
        name: location_pk
        schema:
          type: integer
        required: true
      tags:
      - customers
      responses:
        '204':
          description: No response body
  /api/v1/external/customers/{id}/:
    get:
      operationId: customers_list_2
      description: |-
        Customer Model schema:
        id:
            - type: number
            - read_only
            - description: unique customer identifier
        name:
            - type: string
            - required: true
            - description: full customer name

        phone_number:
            - type: string
            - required: true
            - description: unique customer's primary phone number respecting E.164 format

        secondary_phone_number:
            - type: string
            - required: false
            - description: customer's secondary phone number respecting E.164 format

        email:
            - type: string
            - required: false
            - description: valid customer's email address

        locations:
            - array<objects>
            - read_only
            - description: list of customer locations
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - customers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerList'
          description: ''
    post:
      operationId: customers_create_2
      description: |-
        Customer Model schema:
        id:
            - type: number
            - read_only
            - description: unique customer identifier
        name:
            - type: string
            - required: true
            - description: full customer name

        phone_number:
            - type: string
            - required: true
            - description: unique customer's primary phone number respecting E.164 format

        secondary_phone_number:
            - type: string
            - required: false
            - description: customer's secondary phone number respecting E.164 format

        email:
            - type: string
            - required: false
            - description: valid customer's email address

        locations:
            - array<objects>
            - read_only
            - description: list of customer locations
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: customers_partial_update_2
      description: |-
        Customer Model schema:
        id:
            - type: number
            - read_only
            - description: unique customer identifier
        name:
            - type: string
            - required: true
            - description: full customer name

        phone_number:
            - type: string
            - required: true
            - description: unique customer's primary phone number respecting E.164 format

        secondary_phone_number:
            - type: string
            - required: false
            - description: customer's secondary phone number respecting E.164 format

        email:
            - type: string
            - required: false
            - description: valid customer's email address

        locations:
            - array<objects>
            - read_only
            - description: list of customer locations
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/v1/external/orders/:
    get:
      operationId: orders_list
      description: |-
        Order model schema:
            order_id:
                - string
                - read only field
                - auto-generated by parcel tracer
                - unique identifier of the order

            reference_id:
                - string
                - optional
                - reference number provided by the merchant

            is_exchange:
                - boolean
                - optional
                - if set to true, requires picking up return package upon delivery

            workflow:
                - enum: "STANDARD" | "RETURN"
                - required
                - STANDARD: order delivered from merchant to customer
                - RETURN: order returned from customer to merchant

            tracking_hash:
                - string
                - read only field
                - globally unique identifier used to track order publicly

            is_critical:
                - boolean
                - optional
                - if set to true, enforces rapid delivery operation (subject to the delivery company load and availability)

            customer:
                - integer
                - required
                - customer's identifier

            customer_location:
                - integer
                - required
                - customer location identifier used for order delivery or pickup for return

            merchant_location:
                - integer
                - required
                - identifier of the shop's location used for order pickup or order return

            cod:
                - list of pairs
                - optional
                - total amount to be collected upon delivery (or upon return)
                - examples:
                    - value: [["USD", "123.5"], ["LBP", "2000000"]]
                      significance: `123.5$ + 2000000L.L`
                    - value: []
                      significance: `0`
                - supported currencies: USD, LBP, and EURO
                - note: for RETURN orders, this amount represents the amount that will be paid by the merchant on the order return operation.

            number_of_packages:
                - integer
                - required
                - constraint: should be greater or equal to 1

            description:
                - string
                - optional
                - description of the order content

            notes:
                - string
                - optional
                - extra notes shared with all parties, including the delivery company, the carrier and the recipient

            return_reason:
                - string
                - optional
                - reason for return, relevant for orders with RETURN workflow

            delivery_state:
                - enum:
                    - CREATED: order is created but still at the origin
                    - PICKUP_REQUESTED: order pickup is requested
                    - PICKUP_ASSIGNED: a carrier has been assigned to pickup the order
                    - SCANNED_FOR_PICKUP: the assigned carrier has scanned the order at the origin upon pickup
                    - PICKED_UP: order has been picked up by the assigned carrier
                    - AT_WAREHOUSE: order is at the delivery company's warehouse
                    - DELIVERY_ASSIGNED: a carrier has been assigned to deliver the order
                    - SCANNED_FOR_DELIVERY: the assigned carrier has scanned the order at the warehouse before collecting it to start the delivery process
                    - PICKED_UP_FOR_DELIVERY: the assigned carrier has picked up the order from the warehouse to start the delivery process
                    - IN_TRANSIT: the assigned carrier has started delivering the order
                    - DELIVERED: order has been delivered to the destination (in case of RETURN workflow, it signifies that the order has been delivered back to the shop)
                    - AWAITING_RETURN: the delivery process has been interrupted and the order is on its way back to the warehouse
                    - CANCELLED: the order has been fully cancelled (no more operations are possible)
                    - DELIVERED_AT_WAREHOUSE: the order has been delivered to the customer directly at the warehouse without the intervention of a driver.
                - read only field

            payment_state:
                - enum:
                    - UNPAID: order amount has not been collected yet
                    - PENDING_PAYMENT_BY_DRIVER: the carrier collected the required amount and is yet to transfer the amount to the accounting department
                    - PAID_BY_DRIVER: the amount has been received by the accounting department
                    - PENDING_PAYMENT_TO_MERCHANT: the amount has been prepared for payment to the shop (excluding delivery fees)
                    - PAID_TO_MERCHANT: the amount has been fully paid to the shop. (excluding delivery fees)
                - read only field

            merchant_invoice:
                - integer
                - read only field
                - identifier of the payment invoice
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - orders
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExternalOrderList'
          description: ''
    post:
      operationId: orders_create
      description: |-
        Order model schema:
            order_id:
                - string
                - read only field
                - auto-generated by parcel tracer
                - unique identifier of the order

            reference_id:
                - string
                - optional
                - reference number provided by the merchant

            is_exchange:
                - boolean
                - optional
                - if set to true, requires picking up return package upon delivery

            workflow:
                - enum: "STANDARD" | "RETURN"
                - required
                - STANDARD: order delivered from merchant to customer
                - RETURN: order returned from customer to merchant

            tracking_hash:
                - string
                - read only field
                - globally unique identifier used to track order publicly

            is_critical:
                - boolean
                - optional
                - if set to true, enforces rapid delivery operation (subject to the delivery company load and availability)

            customer:
                - integer
                - required
                - customer's identifier

            customer_location:
                - integer
                - required
                - customer location identifier used for order delivery or pickup for return

            merchant_location:
                - integer
                - required
                - identifier of the shop's location used for order pickup or order return

            cod:
                - list of pairs
                - optional
                - total amount to be collected upon delivery (or upon return)
                - examples:
                    - value: [["USD", "123.5"], ["LBP", "2000000"]]
                      significance: `123.5$ + 2000000L.L`
                    - value: []
                      significance: `0`
                - supported currencies: USD, LBP, and EURO
                - note: for RETURN orders, this amount represents the amount that will be paid by the merchant on the order return operation.

            number_of_packages:
                - integer
                - required
                - constraint: should be greater or equal to 1

            description:
                - string
                - optional
                - description of the order content

            notes:
                - string
                - optional
                - extra notes shared with all parties, including the delivery company, the carrier and the recipient

            return_reason:
                - string
                - optional
                - reason for return, relevant for orders with RETURN workflow

            delivery_state:
                - enum:
                    - CREATED: order is created but still at the origin
                    - PICKUP_REQUESTED: order pickup is requested
                    - PICKUP_ASSIGNED: a carrier has been assigned to pickup the order
                    - SCANNED_FOR_PICKUP: the assigned carrier has scanned the order at the origin upon pickup
                    - PICKED_UP: order has been picked up by the assigned carrier
                    - AT_WAREHOUSE: order is at the delivery company's warehouse
                    - DELIVERY_ASSIGNED: a carrier has been assigned to deliver the order
                    - SCANNED_FOR_DELIVERY: the assigned carrier has scanned the order at the warehouse before collecting it to start the delivery process
                    - PICKED_UP_FOR_DELIVERY: the assigned carrier has picked up the order from the warehouse to start the delivery process
                    - IN_TRANSIT: the assigned carrier has started delivering the order
                    - DELIVERED: order has been delivered to the destination (in case of RETURN workflow, it signifies that the order has been delivered back to the shop)
                    - AWAITING_RETURN: the delivery process has been interrupted and the order is on its way back to the warehouse
                    - CANCELLED: the order has been fully cancelled (no more operations are possible)
                    - DELIVERED_AT_WAREHOUSE: the order has been delivered to the customer directly at the warehouse without the intervention of a driver.
                - read only field

            payment_state:
                - enum:
                    - UNPAID: order amount has not been collected yet
                    - PENDING_PAYMENT_BY_DRIVER: the carrier collected the required amount and is yet to transfer the amount to the accounting department
                    - PAID_BY_DRIVER: the amount has been received by the accounting department
                    - PENDING_PAYMENT_TO_MERCHANT: the amount has been prepared for payment to the shop (excluding delivery fees)
                    - PAID_TO_MERCHANT: the amount has been fully paid to the shop. (excluding delivery fees)
                - read only field

            merchant_invoice:
                - integer
                - read only field
                - identifier of the payment invoice
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExternalOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExternalOrder'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalOrder'
          description: ''
components:
  schemas:
    Customer:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` argument that
        controls which fields should be displayed.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
        phone_number:
          type: string
          maxLength: 30
        secondary_phone_number:
          type: string
          nullable: true
          maxLength: 30
        email:
          type: string
          maxLength: 100
      required:
      - id
    DeliveryStateEnum:
      enum:
      - CREATED
      - PICKUP_REQUESTED
      - PICKUP_ASSIGNED
      - SCANNED_FOR_PICKUP
      - PICKED_UP
      - AT_WAREHOUSE
      - DELIVERY_ASSIGNED
      - SCANNED_FOR_DELIVERY
      - PICKED_UP_FOR_DELIVERY
      - IN_TRANSIT
      - DELIVERED
      - AWAITING_RETURN
      - CANCELLED
      - DELIVERED_AT_WAREHOUSE
      type: string
      description: |-
        * `CREATED` - Created
        * `PICKUP_REQUESTED` - Pickup Requested
        * `PICKUP_ASSIGNED` - Pickup Assigned
        * `SCANNED_FOR_PICKUP` - Scanned for Pickup
        * `PICKED_UP` - Picked Up
        * `AT_WAREHOUSE` - At Warehouse
        * `DELIVERY_ASSIGNED` - Delivery Assigned
        * `SCANNED_FOR_DELIVERY` - Scanned For Delivery
        * `PICKED_UP_FOR_DELIVERY` - Picked Up For Delivery
        * `IN_TRANSIT` - In Transit
        * `DELIVERED` - Delivered
        * `AWAITING_RETURN` - Awaiting Return
        * `CANCELLED` - Cancelled
        * `DELIVERED_AT_WAREHOUSE` - Delivered At Warehouse
    DistrictEnum:
      enum:
      - Zahleh
      - Hasbaya
      - Baalbek
      - Jezzine
      - Baabda
      - Jbeil
      - Zgharta
      - Bint Jbeil
      - Hermel
      - Marjeyoun
      - Bsharri
      - Aley
      - Rashaya
      - Miniyeh-Danniyeh
      - Tripoli
      - Tyre
      - Nabatieh
      - Chouf
      - Maatn
      - Western Beqaa
      - Akkar
      - Sidon
      - Batroun
      - Keserwan
      - Koura
      - Beirut
      type: string
      description: |-
        * `Zahleh` - Zahleh
        * `Hasbaya` - Hasbaya
        * `Baalbek` - Baalbek
        * `Jezzine` - Jezzine
        * `Baabda` - Baabda
        * `Jbeil` - Jbeil
        * `Zgharta` - Zgharta
        * `Bint Jbeil` - Bint Jbeil
        * `Hermel` - Hermel
        * `Marjeyoun` - Marjeyoun
        * `Bsharri` - Bsharri
        * `Aley` - Aley
        * `Rashaya` - Rashaya
        * `Miniyeh-Danniyeh` - Miniyeh-Danniyeh
        * `Tripoli` - Tripoli
        * `Tyre` - Tyre
        * `Nabatieh` - Nabatieh
        * `Chouf` - Chouf
        * `Maatn` - Maatn
        * `Western Beqaa` - Western Beqaa
        * `Akkar` - Akkar
        * `Sidon` - Sidon
        * `Batroun` - Batroun
        * `Keserwan` - Keserwan
        * `Koura` - Koura
        * `Beirut` - Beirut
    ExternalLocation:
      type: object
      properties:
        id:
          type: integer
        address:
          type: string
          maxLength: 400
        city:
          type: string
          maxLength: 200
        directions:
          type: string
          maxLength: 400
        district:
          $ref: '#/components/schemas/DistrictEnum'
        governorate:
          type: string
          readOnly: true
      required:
      - district
      - governorate
    ExternalOrder:
      type: object
      properties:
        order_id:
          type: string
          readOnly: true
          nullable: true
        reference_id:
          type: string
          pattern: ^([A-Za-z0-9]|\.|-)*$
          maxLength: 40
        is_exchange:
          type: boolean
        workflow:
          $ref: '#/components/schemas/WorkflowEnum'
        tracking_link:
          type: string
          readOnly: true
        is_critical:
          type: boolean
          title: Critical
        customer:
          type: object
          additionalProperties: {}
        customer_location:
          type: object
          additionalProperties: {}
        merchant_location:
          type: integer
          nullable: true
        cod:
          type: array
          items:
            type: array
            items:
              type: string
            maxItems: 2
            minItems: 2
          description: 'Total amount to be collected upon delivery. Example: [[''USD'',
            ''123.5'']]'
        number_of_packages:
          type: integer
          maximum: 2147483647
          minimum: 0
        description:
          type: string
          maxLength: 300
        notes:
          type: string
        return_reason:
          type: string
          maxLength: 300
        delivery_state:
          allOf:
          - $ref: '#/components/schemas/DeliveryStateEnum'
          readOnly: true
        payment_state:
          type: string
          readOnly: true
        merchant_invoice:
          type: integer
          readOnly: true
          nullable: true
      required:
      - cod
      - customer
      - customer_location
      - delivery_state
      - merchant_invoice
      - order_id
      - payment_state
      - tracking_link
    PaginatedCustomerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    PaginatedExternalLocationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExternalLocation'
    PaginatedExternalOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExternalOrder'
    PatchedCustomer:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` argument that
        controls which fields should be displayed.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
        phone_number:
          type: string
          maxLength: 30
        secondary_phone_number:
          type: string
          nullable: true
          maxLength: 30
        email:
          type: string
          maxLength: 100
    PatchedExternalLocation:
      type: object
      properties:
        id:
          type: integer
        address:
          type: string
          maxLength: 400
        city:
          type: string
          maxLength: 200
        directions:
          type: string
          maxLength: 400
        district:
          $ref: '#/components/schemas/DistrictEnum'
        governorate:
          type: string
          readOnly: true
    WorkflowEnum:
      enum:
      - STANDARD
      - RETURN
      type: string
      description: |-
        * `STANDARD` - Standard
        * `RETURN` - Return
